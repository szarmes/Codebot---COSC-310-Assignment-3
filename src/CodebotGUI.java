/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.awt.event.ActionEvent;
import javax.swing.*;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
/**
 *
 * @author Duncan
 */
public class CodebotGUI extends javax.swing.JFrame {

    private Codebot bot;
    private Action enterAction;
    /*
     * Creates new form CodebotGUI
     */
    public CodebotGUI() {
        initComponents();
        
        /*
        *The next few lines set up a key binding so that pressing enter will submit the text
        */
        enterAction = new myAction();
        this.jInputText.getInputMap().put( KeyStroke.getKeyStroke( "ENTER" ),
                "doEnterAction" );
        this.jInputText.getActionMap().put( "doEnterAction", enterAction );
        bot = new Codebot();
        
        codebotSpeak(bot.greet());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jInputText = new javax.swing.JTextArea();
        jChatButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jConversation = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jInputText.setColumns(20);
        jInputText.setRows(5);
        jScrollPane1.setViewportView(jInputText);

        jChatButton.setText("Chat");
        jChatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChatButtonActionPerformed(evt);
            }
        });

        jConversation.setEditable(false);
        jConversation.setColumns(20);
        jConversation.setLineWrap(true);
        jConversation.setRows(5);
        jConversation.setWrapStyleWord(true);
        jConversation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jConversation.setDragEnabled(false);
        jScrollPane2.setViewportView(jConversation);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jChatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jChatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    This happens when the "chat" button is pressed 
    */
    private void jChatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChatButtonActionPerformed
    userSpeak();
    }//GEN-LAST:event_jChatButtonActionPerformed
   
    /*
    This method takes the input from the text area and feeds it to codebot,
    adds the text to the conversation, clears the text area,
    and prints codebots response
    */
    private void userSpeak(){
     try{
          String input = this.jInputText.getText();
          if (input.isEmpty()){}
          else{
          this.jInputText.setText("");
          String conversation = this.jConversation.getText();
         this.jConversation.setText(conversation + "You: "+input+"\n");
         String codebotResponse = bot.respond(input);
         codebotSpeak(codebotResponse);
          }
      }
      catch(Exception e){}
    }
    /*
    this adds codebot's response to the conversation
    */
    private void codebotSpeak(String str) {                                            
      try{
          String input = str;
          if (input.isEmpty()){}
          else{
          this.jInputText.setText("");
          String conversation = this.jConversation.getText();
         this.jConversation.setText(conversation + "Codebot: "+input+"\n");
          }
      }
      catch(Exception e){}
    }       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CodebotGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CodebotGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CodebotGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CodebotGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CodebotGUI().setVisible(true);
            }
        });
    }

    /*
    This class is needed to add custom keybindings
    */
class myAction extends AbstractAction {
    public myAction() {
        
    }
    public void actionPerformed(ActionEvent e) {
        userSpeak();
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jChatButton;
    public javax.swing.JTextArea jConversation;
    public javax.swing.JTextArea jInputText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
